name: android workflow
on: 
  workflow_dispatch:

jobs:
  build_android:
    runs-on: ubuntu-latest
    steps:
      # Set up Flutter.
      - name: Clone Flutter repository with stable channel
        uses: subosito/flutter-action@v1
        with:
          channel: stable
      - run: flutter doctor -v

      # Checkout code and get packages.
      - name: Checkout code and get packages
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: flutter pub get
      - run: flutter test
      - run: flutter analyze --no-fatal-infos --no-fatal-warnings
      - run: flutter build appbundle

      # Setup Ruby, Bundler, and Gemfile dependencies
      - name: Setup Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0.3'
          bundler-cache: true
          working-directory: android

      # Get version name & version code
      - name: Get the version name
        id: versionNameId
        run: echo "::set-output name=versionName::$(cat pubspec.yaml | grep "version:" | awk '{print $(NF)}' | awk -F '[+]' '{print $(NF-1)}')"
      - name: Get the version code
        id: versionCodeId
        run: echo "::set-output name=versionCode::$(echo $(git rev-list HEAD --count))"

      - name: Test
        run: echo "${{ steps.versionNameId.outputs.versionName }}.${{ steps.versionCodeId.outputs.versionCode }}"
      
      # Build and deploy with Fastlane ðŸš€.
      - run: bundle exec fastlane build
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        working-directory: android

      - name: Configure AWS credentials from Production account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.S3_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.S3_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1
        env:
          S3_ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
          S3_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
    
      - name: Deploy (Copy files to s3 bucket with the AWS CLI)
        run: aws s3 cp build/app/outputs/flutter-apk/app-release.apk s3://owlting-qa/github_action_flutter/${{ steps.versionNameId.outputs.versionName }}.${{ steps.versionCodeId.outputs.versionCode }}/github_action_flutter_${{ steps.versionNameId.outputs.versionName }}.${{ steps.versionCodeId.outputs.versionCode }}.apk --acl public-read